name: CI

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  update-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Time
        run: |
          mkdir -p ./cache
          previous_date=$(cat ./cache/time || echo "No previous date")
          current_date=$(date "+%Y-%m-%d %H:%M:%S")
          echo "Previous: $previous_date"
          echo "Current: $current_date"
          echo "$current_date" > ./cache/time

      - name: Restore Cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: ./cache
          key: cache-key-${{ hashFiles('cache/time') }}

      - name: Delete Previous Cache
        if: ${{ steps.cache-restore.outputs.cache-hit == 'false' }}
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "cache-key-${{ hashFiles('cache/time') }}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save Cache
        uses: actions/cache/save@v3
        with:
          path: ./cache
          key: cache-key-${{ hashFiles('cache/time') }}

  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "e2e-ci" targets have been requested
      # - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci
      - uses: nrwl/nx-set-shas@v4

      - name: Prebuild Storybook
        run: npm run build-storybook

      - name: Publish to Chromatic
        uses: chromaui/action@latest
        with:
          workingDir: libs/ui-verse
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir : storybook-static

      - name: Prebuild ui-verse
        if: contains(github.event.head_commit.message, '--publish=uiverse --version=')
        run: npm run build-ui-verse

      - name: Publish to npm
        if: contains(github.event.head_commit.message, '--publish=uiverse --version=')
        run: npm publish --access public
        working-directory: dist/libs/ui-verse
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      - run: npx nx affected -t lint test build
      - run: npx nx affected --parallel 1 -t e2e-ci
